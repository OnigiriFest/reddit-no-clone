{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/facundo/code/reddit/web/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { usePostsQuery } from '../generated/graphql';\nimport { Layout } from '../components/Layout';\nimport { Link } from '@chakra-ui/core';\nimport NextLink from 'next/link';\n\nvar Index = function Index() {\n  _s();\n\n  var _usePostsQuery = usePostsQuery(),\n      _usePostsQuery2 = _slicedToArray(_usePostsQuery, 1),\n      data = _usePostsQuery2[0].data;\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(NextLink, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"create post\")), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Hello World\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), !data ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : data.posts.map(function (p) {\n    return __jsx(\"div\", {\n      key: p.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 31\n      }\n    }, p.title);\n  }));\n};\n\n_s(Index, \"zm30ACOHuGXmuTB58o1tVvdVF8Y=\", false, function () {\n  return [usePostsQuery];\n});\n\n_c = Index;\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/pages/index.tsx"],"names":["withUrqlClient","createUrqlClient","usePostsQuery","Layout","Link","NextLink","Index","data","posts","map","p","id","title","ssr"],"mappings":";;;;;;;;AACA,SAASA,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,uBACCJ,aAAa,EADd;AAAA;AAAA,MACTK,IADS,sBACTA,IADS;;AAElB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOG,CAACA,IAAD,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGCA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,UAACC,CAAD;AAAA,WAAO;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,CAAC,CAACE,KAAnB,CAAP;AAAA,GAAf,CAVJ,CADF;AAeD,CAjBD;;GAAMN,K;UACeJ,a;;;KADfI,K;AAmBN,eAAeN,cAAc,CAACC,gBAAD,EAAmB;AAAEY,EAAAA,GAAG,EAAE;AAAP,CAAnB,CAAd,CAAgDP,KAAhD,CAAf","sourcesContent":["import { NavBar } from '../components/NavBar';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { usePostsQuery } from '../generated/graphql';\nimport { Layout } from '../components/Layout';\nimport { Link } from '@chakra-ui/core';\nimport NextLink from 'next/link';\n\nconst Index = () => {\n  const [{ data }] = usePostsQuery();\n  return (\n    <Layout>\n      <NextLink>\n        <Link>create post</Link>\n      </NextLink>\n      <br />\n      <div>Hello World</div>\n      <br />\n      {!data ? (\n        <div>Loading...</div>\n      ) : (\n        data.posts.map((p) => <div key={p.id}>{p.title}</div>)\n      )}\n    </Layout>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Index);\n"]},"metadata":{},"sourceType":"module"}