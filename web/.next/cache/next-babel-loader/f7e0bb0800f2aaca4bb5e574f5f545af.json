{"ast":null,"code":"import { useRouter } from 'next/router';\nimport { usePostQuery } from '../generated/graphql';\nexport const useGetPostFromUrl = () => {\n  const router = useRouter();\n  const intId = typeof router.query.id === 'string' ? parseInt(router.query.id) : -1;\n  return usePostQuery({\n    pause: intId === -1,\n    variables: {\n      id: intId\n    }\n  });\n};","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/utils/useGetPostFromUrl.ts"],"names":["useRouter","usePostQuery","useGetPostFromUrl","router","intId","query","id","parseInt","pause","variables"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,KAAK,GACT,OAAOD,MAAM,CAACE,KAAP,CAAaC,EAApB,KAA2B,QAA3B,GAAsCC,QAAQ,CAACJ,MAAM,CAACE,KAAP,CAAaC,EAAd,CAA9C,GAAkE,CAAC,CADrE;AAEA,SAAOL,YAAY,CAAC;AAClBO,IAAAA,KAAK,EAAEJ,KAAK,KAAK,CAAC,CADA;AAElBK,IAAAA,SAAS,EAAE;AACTH,MAAAA,EAAE,EAAEF;AADK;AAFO,GAAD,CAAnB;AAMD,CAVM","sourcesContent":["import { useRouter } from 'next/router';\nimport { usePostQuery } from '../generated/graphql';\n\nexport const useGetPostFromUrl = () => {\n  const router = useRouter();\n  const intId =\n    typeof router.query.id === 'string' ? parseInt(router.query.id) : -1;\n  return usePostQuery({\n    pause: intId === -1,\n    variables: {\n      id: intId,\n    },\n  });\n};\n"]},"metadata":{},"sourceType":"module"}