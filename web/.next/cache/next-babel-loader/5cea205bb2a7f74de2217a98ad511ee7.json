{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/facundo/code/reddit/web/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Button, Flex, Heading, Link, Stack, Text, IconButton } from '@chakra-ui/core';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from 'next/link';\nimport { useState } from 'react';\nimport { Layout } from '../components/Layout';\nimport { usePostsQuery, useDeletePostMutation, useMeQuery } from '../generated/graphql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { UpdootSection } from '../components/UpdootSection';\nimport { isServer } from '../utils/isServer';\n\nvar Index = function Index() {\n  _s();\n\n  var _useState = useState({\n    limit: 20,\n    cursor: null\n  }),\n      variables = _useState[0],\n      setVariables = _useState[1];\n\n  var _usePostsQuery = usePostsQuery({\n    variables: variables\n  }),\n      _usePostsQuery2 = _slicedToArray(_usePostsQuery, 1),\n      _usePostsQuery2$ = _usePostsQuery2[0],\n      data = _usePostsQuery2$.data,\n      fetching = _usePostsQuery2$.fetching;\n\n  var _useDeletePostMutatio = useDeletePostMutation(),\n      _useDeletePostMutatio2 = _slicedToArray(_useDeletePostMutatio, 2),\n      deletePost = _useDeletePostMutatio2[1];\n\n  var _useMeQuery = useMeQuery({\n    pause: isServer()\n  }),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      user = _useMeQuery2$.data,\n      fetchingUser = _useMeQuery2$.fetching;\n\n  if (!fetching && !data) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    }, \"you got no posts for some reason\");\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, !data && fetching ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : __jsx(Stack, {\n    spacing: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, data.posts.posts.map(function (p) {\n    return !p ? null : __jsx(Flex, {\n      key: p.id,\n      p: 5,\n      shadow: \"md\",\n      borderWidth: \"1px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, __jsx(UpdootSection, {\n      post: p,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), __jsx(Box, {\n      flex: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, __jsx(NextLink, {\n      href: \"/post/[id]\",\n      as: \"/post/\".concat(p.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, __jsx(Heading, {\n      fontSize: \"xl\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }\n    }, p.title))), __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, \"posted by \", p.creator.username), __jsx(Flex, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, __jsx(Text, {\n      flex: 1,\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, p.textSnippet), !fetchingUser && user && user.me && p.creator.id === (user === null || user === void 0 ? void 0 : user.me.id) ? __jsx(Box, {\n      ml: \"auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    }, __jsx(NextLink, {\n      href: \"/post/edit/[id]\",\n      as: \"/post/edit/\".concat(p.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, __jsx(IconButton, {\n      mr: \"2\",\n      icon: \"edit\",\n      \"aria-label\": \"Edit Post\",\n      as: Link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }\n    })), __jsx(IconButton, {\n      icon: \"delete\",\n      \"aria-label\": \"Delete Post\",\n      onClick: function onClick() {\n        return deletePost({\n          id: p.id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    })) : null)));\n  })), data && data.posts.hasMore ? __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      setVariables({\n        limit: variables.limit,\n        cursor: data.posts.posts[data.posts.posts.length - 1].createdAt\n      });\n    },\n    m: \"auto\",\n    my: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"load more\")) : null);\n};\n\n_s(Index, \"2Ml9rpSGS5blhHdlVwJUe7oFbYM=\", false, function () {\n  return [usePostsQuery, useDeletePostMutation, useMeQuery];\n});\n\n_c = Index;\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/pages/index.tsx"],"names":["Box","Button","Flex","Heading","Link","Stack","Text","IconButton","withUrqlClient","NextLink","useState","Layout","usePostsQuery","useDeletePostMutation","useMeQuery","createUrqlClient","UpdootSection","isServer","Index","limit","cursor","variables","setVariables","data","fetching","deletePost","pause","user","fetchingUser","posts","map","p","id","title","creator","username","textSnippet","me","hasMore","length","createdAt","ssr"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Link,\n  Stack,\n  Text,\n  Icon,\n  IconButton,\n} from '@chakra-ui/core';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from 'next/link';\nimport { useState } from 'react';\nimport { Layout } from '../components/Layout';\nimport {\n  usePostsQuery,\n  useDeletePostMutation,\n  useMeQuery,\n} from '../generated/graphql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { UpdootSection } from '../components/UpdootSection';\nimport { isServer } from '../utils/isServer';\n\nconst Index = () => {\n  const [variables, setVariables] = useState({\n    limit: 20,\n    cursor: null as null | string,\n  });\n  const [{ data, fetching }] = usePostsQuery({\n    variables,\n  });\n  const [, deletePost] = useDeletePostMutation();\n  const [{ data: user, fetching: fetchingUser }] = useMeQuery({\n    pause: isServer(),\n  });\n\n  if (!fetching && !data) {\n    return <div>you got no posts for some reason</div>;\n  }\n\n  return (\n    <Layout>\n      {!data && fetching ? (\n        <div>Loading...</div>\n      ) : (\n        <Stack spacing={8}>\n          {data!.posts.posts.map((p) =>\n            !p ? null : (\n              <Flex key={p.id} p={5} shadow=\"md\" borderWidth=\"1px\">\n                <UpdootSection post={p} />\n                <Box flex={1}>\n                  <NextLink href={`/post/[id]`} as={`/post/${p.id}`}>\n                    <Link>\n                      <Heading fontSize=\"xl\">{p.title}</Heading>\n                    </Link>\n                  </NextLink>\n                  <Text>posted by {p.creator.username}</Text>\n                  <Flex align=\"center\">\n                    <Text flex={1} mt={4}>\n                      {p.textSnippet}\n                    </Text>\n                    {!fetchingUser &&\n                    user &&\n                    user.me &&\n                    p.creator.id === user?.me.id ? (\n                      <Box ml=\"auto\">\n                        <NextLink\n                          href=\"/post/edit/[id]\"\n                          as={`/post/edit/${p.id}`}>\n                          <IconButton\n                            mr=\"2\"\n                            icon=\"edit\"\n                            aria-label=\"Edit Post\"\n                            as={Link}\n                          />\n                        </NextLink>\n                        <IconButton\n                          icon=\"delete\"\n                          aria-label=\"Delete Post\"\n                          onClick={() => deletePost({ id: p.id })}\n                        />\n                      </Box>\n                    ) : null}\n                  </Flex>\n                </Box>\n              </Flex>\n            )\n          )}\n        </Stack>\n      )}\n      {data && data.posts.hasMore ? (\n        <Flex>\n          <Button\n            onClick={() => {\n              setVariables({\n                limit: variables.limit,\n                cursor: data.posts.posts[data.posts.posts.length - 1].createdAt,\n              });\n            }}\n            m=\"auto\"\n            my={8}>\n            load more\n          </Button>\n        </Flex>\n      ) : null}\n    </Layout>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Index);\n"]},"metadata":{},"sourceType":"module"}