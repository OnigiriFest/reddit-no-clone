{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/facundo/code/reddit/web/src/components/NavBar.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Link, Flex, Button, Heading } from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useMeQuery, useLogoutMutation } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\nimport { useRouter } from 'next/router';\nexport var NavBar = function NavBar(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n\n  var _useLogoutMutation = useLogoutMutation(),\n      _useLogoutMutation2 = _slicedToArray(_useLogoutMutation, 2),\n      logoutFetching = _useLogoutMutation2[0].fetching,\n      logout = _useLogoutMutation2[1];\n\n  var _useMeQuery = useMeQuery({\n    pause: isServer()\n  }),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      data = _useMeQuery2$.data,\n      fetching = _useMeQuery2$.fetching;\n\n  var body = null;\n\n  if (fetching) {\n    body = null;\n  } else if (!(data === null || data === void 0 ? void 0 : data.me)) {\n    body = __jsx(React.Fragment, null, __jsx(NextLink, {\n      href: \"/login\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      mr: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, \"login\")), __jsx(NextLink, {\n      href: \"/register\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, \"register\")));\n  } else {\n    body = __jsx(Flex, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, __jsx(NextLink, {\n      href: \"/create-post\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      as: Link,\n      mr: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"create post\")), __jsx(Box, {\n      mr: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, data.me.username), __jsx(Button, {\n      variant: \"link\",\n      onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return logout();\n\n              case 2:\n                router.reload();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })),\n      isLoading: logoutFetching,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"logout\"));\n  }\n\n  return __jsx(Flex, {\n    bg: \"tan\",\n    p: 4,\n    zIndex: 2,\n    position: \"sticky\",\n    top: \"0\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    flex: 1,\n    m: \"auto\",\n    align: \"center\",\n    maxW: 800,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(NextLink, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Reddit\"))), __jsx(Box, {\n    ml: 'auto',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, body)));\n};\n\n_s(NavBar, \"9XhURlKSSl6TRs5u9rI4IU4nI/E=\", false, function () {\n  return [useRouter, useLogoutMutation, useMeQuery];\n});\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/components/NavBar.tsx"],"names":["React","Box","Link","Flex","Button","Heading","NextLink","useMeQuery","useLogoutMutation","isServer","useRouter","NavBar","router","logoutFetching","fetching","logout","pause","data","body","me","username","reload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, Link, Flex, Button, Heading } from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useMeQuery, useLogoutMutation } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\nimport { useRouter } from 'next/router';\n\ninterface NavBarProps {}\n\nexport const NavBar: React.FC<NavBarProps> = ({}) => {\n  const router = useRouter();\n  const [{ fetching: logoutFetching }, logout] = useLogoutMutation();\n  const [{ data, fetching }] = useMeQuery({ pause: isServer() });\n  let body = null;\n  if (fetching) {\n    body = null;\n  } else if (!data?.me) {\n    body = (\n      <>\n        <NextLink href=\"/login\">\n          <Link mr={2}>login</Link>\n        </NextLink>\n        <NextLink href=\"/register\">\n          <Link>register</Link>\n        </NextLink>\n      </>\n    );\n  } else {\n    body = (\n      <Flex align=\"center\">\n        <NextLink href=\"/create-post\">\n          <Button as={Link} mr={2}>\n            create post\n          </Button>\n        </NextLink>\n        <Box mr={2}>{data.me.username}</Box>\n        <Button\n          variant=\"link\"\n          onClick={async () => {\n            await logout();\n            router.reload();\n          }}\n          isLoading={logoutFetching}>\n          logout\n        </Button>\n      </Flex>\n    );\n  }\n  return (\n    <Flex bg=\"tan\" p={4} zIndex={2} position=\"sticky\" top=\"0\" align=\"center\">\n      <Flex flex={1} m=\"auto\" align=\"center\" maxW={800}>\n        <NextLink href=\"/\">\n          <Link>\n            <Heading>Reddit</Heading>\n          </Link>\n        </NextLink>\n        <Box ml={'auto'}>{body}</Box>\n      </Flex>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}