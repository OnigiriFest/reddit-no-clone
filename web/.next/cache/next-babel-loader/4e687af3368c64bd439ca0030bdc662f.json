{"ast":null,"code":"var _jsxFileName = \"/home/facundo/code/reddit/web/src/pages/post/edit/[id].tsx\";\nvar __jsx = React.createElement;\nimport { Box, Button } from '@chakra-ui/core';\nimport { Form, Formik } from 'formik';\nimport { withUrqlClient } from 'next-urql';\nimport React from 'react';\nimport { InputField } from '../../../components/InputField';\nimport { Layout } from '../../../components/Layout';\nimport { useUpdatePostMutation } from '../../../generated/graphql';\nimport { createUrqlClient } from '../../../utils/createUrqlClient';\nimport { useGetPostFromUrl } from '../../../utils/useGetPostFromUrl';\nexport const EditPost = ({}) => {\n  const [{\n    data,\n    fetching\n  }] = useGetPostFromUrl();\n  const [, updatePost] = useUpdatePostMutation();\n\n  if (fetching) {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"loading...\"));\n  }\n\n  if (!(data === null || data === void 0 ? void 0 : data.post)) {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"could not find post\"));\n  }\n\n  return __jsx(Layout, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      title: data.post.title,\n      text: data.post.text\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {// const { error } = await createPost({ input: values });\n      // if (!error) {\n      //   router.push('/');\n      // }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(InputField, {\n    name: \"title\",\n    placeholder: \"title\",\n    label: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(InputField, {\n    textarea: true,\n    name: \"text\",\n    placeholder: \"text\",\n    label: \"Body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  })), __jsx(Button, {\n    type: \"submit\",\n    variantColor: \"teal\",\n    mt: \"4\",\n    isLoading: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"edit post\"))));\n};\nexport default withUrqlClient(createUrqlClient)(EditPost);","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/pages/post/edit/[id].tsx"],"names":["Box","Button","Form","Formik","withUrqlClient","React","InputField","Layout","useUpdatePostMutation","createUrqlClient","useGetPostFromUrl","EditPost","data","fetching","updatePost","post","title","text","values","setErrors","isSubmitting"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,qBAAT,QAAsC,4BAAtC;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AAEA,OAAO,MAAMC,QAAsB,GAAG,CAAC,EAAD,KAAQ;AAC5C,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,IAAuBH,iBAAiB,EAA9C;AACA,QAAM,GAAGI,UAAH,IAAiBN,qBAAqB,EAA5C;;AAEA,MAAIK,QAAJ,EAAc;AACZ,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;;AAED,MAAI,EAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,IAAP,CAAJ,EAAiB;AACf,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF;AAKD;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAEJ,IAAI,CAACG,IAAL,CAAUC,KAAnB;AAA0BC,MAAAA,IAAI,EAAEL,IAAI,CAACG,IAAL,CAAUE;AAA1C,KADjB;AAEE,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC,CACzC;AACA;AACA;AACA;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,WAAW,EAAC,OAArC;AAA6C,IAAA,KAAK,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,MAHd;AAIE,IAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAUE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,YAAY,EAAC,MAFf;AAGE,IAAA,EAAE,EAAC,GAHL;AAIE,IAAA,SAAS,EAAEA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVF,CATJ,CADF,CADF;AAiCD,CArDM;AAuDP,eAAehB,cAAc,CAACK,gBAAD,CAAd,CAAiCE,QAAjC,CAAf","sourcesContent":["import { Box, Button } from '@chakra-ui/core';\nimport { Form, Formik } from 'formik';\nimport { withUrqlClient } from 'next-urql';\nimport React from 'react';\nimport { InputField } from '../../../components/InputField';\nimport { Layout } from '../../../components/Layout';\nimport { useUpdatePostMutation } from '../../../generated/graphql';\nimport { createUrqlClient } from '../../../utils/createUrqlClient';\nimport { useGetPostFromUrl } from '../../../utils/useGetPostFromUrl';\n\nexport const EditPost: React.FC<{}> = ({}) => {\n  const [{ data, fetching }] = useGetPostFromUrl();\n  const [, updatePost] = useUpdatePostMutation();\n\n  if (fetching) {\n    return (\n      <Layout>\n        <div>loading...</div>\n      </Layout>\n    );\n  }\n\n  if (!data?.post) {\n    return (\n      <Layout>\n        <Box>could not find post</Box>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout variant=\"small\">\n      <Formik\n        initialValues={{ title: data.post.title, text: data.post.text }}\n        onSubmit={async (values, { setErrors }) => {\n          // const { error } = await createPost({ input: values });\n          // if (!error) {\n          //   router.push('/');\n          // }\n        }}>\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField name=\"title\" placeholder=\"title\" label=\"Title\" />\n            <Box mt={4}>\n              <InputField\n                textarea\n                name=\"text\"\n                placeholder=\"text\"\n                label=\"Body\"\n              />\n            </Box>\n            <Button\n              type=\"submit\"\n              variantColor=\"teal\"\n              mt=\"4\"\n              isLoading={isSubmitting}>\n              edit post\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(EditPost);\n"]},"metadata":{},"sourceType":"module"}