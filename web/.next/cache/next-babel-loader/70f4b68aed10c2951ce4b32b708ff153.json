{"ast":null,"code":"var _jsxFileName = \"/home/facundo/code/reddit/web/src/pages/forgot-password.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Button } from '@chakra-ui/core';\nimport { Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { InputField } from '../components/InputField';\nimport { Wrapper } from '../components/Wrapper';\nimport { useForgotPasswordMutation } from '../generated/graphql';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\n\nconst ForgotPassword = ({}) => {\n  const {\n    0: complete,\n    1: setComplete\n  } = useState(false);\n  const [, forgotPassword] = useForgotPasswordMutation();\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      email: ''\n    },\n    onSubmit: async values => {\n      await forgotPassword(values);\n      setComplete(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => complete ? __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"if an account with that email exists, we sent you an email\") : __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(InputField, {\n    name: \"email\",\n    placeholder: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    variantColor: \"teal\",\n    mt: \"4\",\n    isLoading: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"forgot password\"))));\n};\n\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/pages/forgot-password.tsx"],"names":["Box","Button","Form","Formik","React","useState","InputField","Wrapper","useForgotPasswordMutation","withUrqlClient","createUrqlClient","ForgotPassword","complete","setComplete","forgotPassword","email","values","isSubmitting"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,yBAAT,QAA0C,sBAA1C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,MAAMC,cAA4B,GAAG,CAAC,EAAD,KAAQ;AAC3C,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,GAAGS,cAAH,IAAqBN,yBAAyB,EAApD;AAEA,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KADjB;AAEE,IAAA,QAAQ,EAAE,MAAOC,MAAP,IAAkB;AAC1B,YAAMF,cAAc,CAACE,MAAD,CAApB;AACAH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,CAAC;AAAEI,IAAAA;AAAF,GAAD,KACCL,QAAQ,GACN,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADM,GAKN,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,YAAY,EAAC,MAFf;AAGE,IAAA,EAAE,EAAC,GAHL;AAIE,IAAA,SAAS,EAAEK,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,CAZN,CADF,CADF;AAkCD,CAtCD;;AAwCA,eAAeR,cAAc,CAACC,gBAAD,CAAd,CAAiCC,cAAjC,CAAf","sourcesContent":["import { Box, Button } from '@chakra-ui/core';\nimport { Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { InputField } from '../components/InputField';\nimport { Wrapper } from '../components/Wrapper';\nimport { useForgotPasswordMutation } from '../generated/graphql';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\n\nconst ForgotPassword: React.FC<{}> = ({}) => {\n  const [complete, setComplete] = useState(false);\n  const [, forgotPassword] = useForgotPasswordMutation();\n\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ email: '' }}\n        onSubmit={async (values) => {\n          await forgotPassword(values);\n          setComplete(true);\n        }}>\n        {({ isSubmitting }) =>\n          complete ? (\n            <Box>\n              if an account with that email exists, we sent you an email\n            </Box>\n          ) : (\n            <Form>\n              <InputField\n                name=\"email\"\n                placeholder=\"email\"\n                label=\"Email\"\n                type=\"email\"\n              />\n              <Button\n                type=\"submit\"\n                variantColor=\"teal\"\n                mt=\"4\"\n                isLoading={isSubmitting}>\n                forgot password\n              </Button>\n            </Form>\n          )\n        }\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}