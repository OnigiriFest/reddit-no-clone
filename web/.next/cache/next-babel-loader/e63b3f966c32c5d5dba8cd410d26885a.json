{"ast":null,"code":"var _jsxFileName = \"/home/facundo/code/reddit/web/src/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ThemeProvider, CSSReset, ColorModeProvider } from '@chakra-ui/core';\nimport { Provider, createClient, dedupExchange, fetchExchange } from 'urql';\nimport { cacheExchange } from '@urql/exchange-graphcache';\nconst client = createClient({\n  url: 'http://localhost:4000/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  exchanges: [dedupExchange, cacheExchange({}), fetchExchange]\n});\nimport theme from '../theme';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(Provider, {\n    value: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(ColorModeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(CSSReset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/pages/_app.tsx"],"names":["ThemeProvider","CSSReset","ColorModeProvider","Provider","createClient","dedupExchange","fetchExchange","cacheExchange","client","url","fetchOptions","credentials","exchanges","theme","MyApp","Component","pageProps"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,iBAAlC,QAA2D,iBAA3D;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,aAAjC,EAAgDC,aAAhD,QAAqE,MAArE;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,MAAMC,MAAM,GAAGJ,YAAY,CAAC;AAC1BK,EAAAA,GAAG,EAAE,+BADqB;AAE1BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD,GAFY;AAK1BC,EAAAA,SAAS,EAAE,CAACP,aAAD,EAAgBE,aAAa,CAAC,EAAD,CAA7B,EAAmCD,aAAnC;AALe,CAAD,CAA3B;AAQA,OAAOO,KAAP,MAAkB,UAAlB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAA8C;AAC5C,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAER,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEK,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD,eAAeG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF,CADF,CADF;AAUD;;AAED,eAAeF,KAAf","sourcesContent":["import { ThemeProvider, CSSReset, ColorModeProvider } from '@chakra-ui/core';\nimport { Provider, createClient, dedupExchange, fetchExchange } from 'urql';\nimport { cacheExchange } from '@urql/exchange-graphcache';\n\nconst client = createClient({\n  url: 'http://localhost:4000/graphql',\n  fetchOptions: {\n    credentials: 'include',\n  },\n  exchanges: [dedupExchange, cacheExchange({}), fetchExchange],\n});\n\nimport theme from '../theme';\n\nfunction MyApp({ Component, pageProps }: any) {\n  return (\n    <Provider value={client}>\n      <ThemeProvider theme={theme}>\n        <ColorModeProvider>\n          <CSSReset />\n          <Component {...pageProps} />\n        </ColorModeProvider>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}