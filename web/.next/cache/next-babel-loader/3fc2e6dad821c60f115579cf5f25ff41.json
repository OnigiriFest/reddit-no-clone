{"ast":null,"code":"var _jsxFileName = \"/home/facundo/code/reddit-web/src/components/InputField.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { FormControl, FormLabel, Input, FormErrorMessage } from '@chakra-ui/core';\nimport { useField } from 'formik';\nexport const InputField = props => {\n  const [field, {\n    error\n  }] = useField(props);\n  return __jsx(FormControl, {\n    isInvalid: !!error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: field.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, props.label), __jsx(Input, {\n    id: field.name,\n    placeholder: props.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), error ? __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }\n  }, error) : null);\n};","map":{"version":3,"sources":["/home/facundo/code/reddit-web/src/components/InputField.tsx"],"names":["React","FormControl","FormLabel","Input","FormErrorMessage","useField","InputField","props","field","error","name","label","placeholder"],"mappings":";;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,gBAJF,QAKO,iBALP;AAMA,SAASC,QAAT,QAAyB,QAAzB;AAQA,OAAO,MAAMC,UAAqC,GAAIC,KAAD,IAAW;AAC9D,QAAM,CAACC,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,IAAqBJ,QAAQ,CAACE,KAAD,CAAnC;AACA,SACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,KAAK,CAACI,KAAvC,CADF,EAEE,MAAC,KAAD;AAAO,IAAA,EAAE,EAAEH,KAAK,CAACE,IAAjB;AAAuB,IAAA,WAAW,EAAEH,KAAK,CAACK,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGH,KAAK,GAAG,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAnB,CAAH,GAAkD,IAH1D,CADF;AAOD,CATM","sourcesContent":["import React, { InputHTMLAttributes } from 'react';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n} from '@chakra-ui/core';\nimport { useField } from 'formik';\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n  name: string;\n  label: string;\n  placeholder: string;\n};\n\nexport const InputField: React.FC<InputFieldProps> = (props) => {\n  const [field, { error }] = useField(props);\n  return (\n    <FormControl isInvalid={!!error}>\n      <FormLabel htmlFor={field.name}>{props.label}</FormLabel>\n      <Input id={field.name} placeholder={props.placeholder} />\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}