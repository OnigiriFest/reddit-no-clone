{"ast":null,"code":"var _jsxFileName = \"/home/facundo/code/reddit/web/src/components/NavBar.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Link, Flex, Button, Heading } from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useMeQuery, useLogoutMutation } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\nexport const NavBar = ({}) => {\n  const [{\n    fetching: logoutFetching\n  }, logout] = useLogoutMutation();\n  const [{\n    data,\n    fetching\n  }] = useMeQuery({\n    pause: isServer()\n  });\n  let body = null;\n\n  if (fetching) {\n    body = null;\n  } else if (!(data === null || data === void 0 ? void 0 : data.me)) {\n    body = __jsx(React.Fragment, null, __jsx(NextLink, {\n      href: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      mr: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, \"login\")), __jsx(NextLink, {\n      href: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, \"register\")));\n  } else {\n    body = __jsx(Flex, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, __jsx(NextLink, {\n      href: \"/create-post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      as: Link,\n      mr: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, \"create post\")), __jsx(Box, {\n      mr: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, data.me.username), __jsx(Button, {\n      variant: \"link\",\n      onClick: () => logout(),\n      isLoading: logoutFetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"logout\"));\n  }\n\n  return __jsx(Flex, {\n    bg: \"tan\",\n    p: 4,\n    zIndex: 2,\n    position: \"sticky\",\n    top: \"0\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    flex: 1,\n    align: \"center\",\n    maxW: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(NextLink, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Reddit\"))), __jsx(Box, {\n    ml: 'auto',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, body)));\n};","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/components/NavBar.tsx"],"names":["React","Box","Link","Flex","Button","Heading","NextLink","useMeQuery","useLogoutMutation","isServer","NavBar","fetching","logoutFetching","logout","data","pause","body","me","username"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, Link, Flex, Button, Heading } from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useMeQuery, useLogoutMutation } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\n\ninterface NavBarProps {}\n\nexport const NavBar: React.FC<NavBarProps> = ({}) => {\n  const [{ fetching: logoutFetching }, logout] = useLogoutMutation();\n  const [{ data, fetching }] = useMeQuery({ pause: isServer() });\n  let body = null;\n  if (fetching) {\n    body = null;\n  } else if (!data?.me) {\n    body = (\n      <>\n        <NextLink href=\"/login\">\n          <Link mr={2}>login</Link>\n        </NextLink>\n        <NextLink href=\"/register\">\n          <Link>register</Link>\n        </NextLink>\n      </>\n    );\n  } else {\n    body = (\n      <Flex align=\"center\">\n        <NextLink href=\"/create-post\">\n          <Button as={Link} mr={2}>\n            create post\n          </Button>\n        </NextLink>\n        <Box mr={2}>{data.me.username}</Box>\n        <Button\n          variant=\"link\"\n          onClick={() => logout()}\n          isLoading={logoutFetching}>\n          logout\n        </Button>\n      </Flex>\n    );\n  }\n  return (\n    <Flex bg=\"tan\" p={4} zIndex={2} position=\"sticky\" top=\"0\" align=\"center\">\n      <Flex flex={1} align=\"center\" maxW={800}>\n        <NextLink href=\"/\">\n          <Link>\n            <Heading>Reddit</Heading>\n          </Link>\n        </NextLink>\n        <Box ml={'auto'}>{body}</Box>\n      </Flex>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}