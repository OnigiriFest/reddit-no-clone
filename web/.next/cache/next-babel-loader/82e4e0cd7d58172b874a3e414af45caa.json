{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/facundo/code/reddit-web/src/pages/register.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar Register = function Register(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return __jsx(Formik, {\n    initialValues: {\n      name: 'Sasuke'\n    },\n    onSubmit: function onSubmit(values, actions) {\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        actions.setSubmitting(false);\n      }, 1000);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, function (props) {\n    return __jsx(\"form\", {\n      onSubmit: props.handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, __jsx(Field, {\n      name: \"name\",\n      validate: validateName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, function (_ref2) {\n      var field = _ref2.field,\n          form = _ref2.form;\n      return __jsx(FormControl, {\n        isInvalid: form.errors.name && form.touched.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }\n      }, __jsx(FormLabel, {\n        htmlFor: \"name\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, \"First name\"), __jsx(Input, _extends({}, field, {\n        id: \"name\",\n        placeholder: \"name\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      })), __jsx(FormErrorMessage, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, form.errors.name));\n    }), __jsx(Button, {\n      mt: 4,\n      variantColor: \"teal\",\n      isLoading: props.isSubmitting,\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, \"Submit\"));\n  });\n};\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/facundo/code/reddit-web/src/pages/register.tsx"],"names":["React","Register","name","values","actions","setTimeout","alert","JSON","stringify","setSubmitting","props","handleSubmit","validateName","field","form","errors","touched","isSubmitting"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAAQ;AAAA;;AAChD,SACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADjB;AAEE,IAAA,QAAQ,EAAE,kBAACC,MAAD,EAASC,OAAT,EAAqB;AAC7BC,MAAAA,UAAU,CAAC,YAAM;AACfC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAC,QAAAA,OAAO,CAACK,aAAR,CAAsB,KAAtB;AACD,OAHS,EAGP,IAHO,CAAV;AAID,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,UAACC,KAAD;AAAA,WACC;AAAM,MAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA,UAAGC,KAAH,SAAGA,KAAH;AAAA,UAAUC,IAAV,SAAUA,IAAV;AAAA,aACC,MAAC,WAAD;AAAa,QAAA,SAAS,EAAEA,IAAI,CAACC,MAAL,CAAYb,IAAZ,IAAoBY,IAAI,CAACE,OAAL,CAAad,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAW,QAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,MAAC,KAAD,eAAWW,KAAX;AAAkB,QAAA,EAAE,EAAC,MAArB;AAA4B,QAAA,WAAW,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBC,IAAI,CAACC,MAAL,CAAYb,IAA/B,CAHF,CADD;AAAA,KADH,CADF,EAUE,MAAC,MAAD;AACE,MAAA,EAAE,EAAE,CADN;AAEE,MAAA,YAAY,EAAC,MAFf;AAGE,MAAA,SAAS,EAAEQ,KAAK,CAACO,YAHnB;AAIE,MAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,CADD;AAAA,GARH,CADF;AA+BD,CAhCD;;KAAMhB,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\n\ninterface registerProps {}\n\nconst Register: React.FC<registerProps> = ({}) => {\n  return (\n    <Formik\n      initialValues={{ name: 'Sasuke' }}\n      onSubmit={(values, actions) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          actions.setSubmitting(false);\n        }, 1000);\n      }}>\n      {(props) => (\n        <form onSubmit={props.handleSubmit}>\n          <Field name=\"name\" validate={validateName}>\n            {({ field, form }) => (\n              <FormControl isInvalid={form.errors.name && form.touched.name}>\n                <FormLabel htmlFor=\"name\">First name</FormLabel>\n                <Input {...field} id=\"name\" placeholder=\"name\" />\n                <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n              </FormControl>\n            )}\n          </Field>\n          <Button\n            mt={4}\n            variantColor=\"teal\"\n            isLoading={props.isSubmitting}\n            type=\"submit\">\n            Submit\n          </Button>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}