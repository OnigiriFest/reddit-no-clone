{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/facundo/code/reddit/web/src/pages/forgot-password.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Button } from '@chakra-ui/core';\nimport { Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { InputField } from '../components/InputField';\nimport { Wrapper } from '../components/Wrapper';\nimport { useForgotPasswordMutation } from '../generated/graphql';\n\nvar ForgotPassword = function ForgotPassword(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(false),\n      complete = _useState[0],\n      setComplete = _useState[1];\n\n  var _useForgotPasswordMut = useForgotPasswordMutation(),\n      _useForgotPasswordMut2 = _slicedToArray(_useForgotPasswordMut, 2),\n      forgotPassword = _useForgotPasswordMut2[1];\n\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      email: ''\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return forgotPassword(values);\n\n              case 2:\n                setComplete(true);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting;\n    return complete ? __jsx(Box, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"if an account with that email exists, we sent you an email\") : __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(InputField, {\n      name: \"email\",\n      placeholder: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }), __jsx(Button, {\n      type: \"submit\",\n      variantColor: \"teal\",\n      mt: \"4\",\n      isLoading: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, \"forgot password\"));\n  }));\n};\n\n_s(ForgotPassword, \"faFCxltjMWSYm4HFAk1hyKm2MmY=\", false, function () {\n  return [useForgotPasswordMutation];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/pages/forgot-password.tsx"],"names":["Box","Button","Form","Formik","React","useState","InputField","Wrapper","useForgotPasswordMutation","ForgotPassword","complete","setComplete","forgotPassword","email","values","isSubmitting"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,yBAAT,QAA0C,sBAA1C;;AAEA,IAAMC,cAA4B,GAAG,SAA/BA,cAA+B,OAAQ;AAAA;;AAAA;;AAAA,kBACXJ,QAAQ,CAAC,KAAD,CADG;AAAA,MACpCK,QADoC;AAAA,MAC1BC,WAD0B;;AAAA,8BAEhBH,yBAAyB,EAFT;AAAA;AAAA,MAElCI,cAFkC;;AAI3C,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADjB;AAEE,IAAA,QAAQ;AAAA,2EAAE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACFF,cAAc,CAACE,MAAD,CADZ;;AAAA;AAERH,gBAAAA,WAAW,CAAC,IAAD,CAAX;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG;AAAA,QAAGI,YAAH,SAAGA,YAAH;AAAA,WACCL,QAAQ,GACN,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEADM,GAKN,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,WAAW,EAAC,OAFd;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,YAAY,EAAC,MAFf;AAGE,MAAA,EAAE,EAAC,GAHL;AAIE,MAAA,SAAS,EAAEK,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPF,CANH;AAAA,GANH,CADF,CADF;AAkCD,CAtCD;;GAAMN,c;UAEuBD,yB;;;KAFvBC,c;AAwCN,eAAeA,cAAf","sourcesContent":["import { Box, Button } from '@chakra-ui/core';\nimport { Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { InputField } from '../components/InputField';\nimport { Wrapper } from '../components/Wrapper';\nimport { useForgotPasswordMutation } from '../generated/graphql';\n\nconst ForgotPassword: React.FC<{}> = ({}) => {\n  const [complete, setComplete] = useState(false);\n  const [, forgotPassword] = useForgotPasswordMutation();\n\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ email: '' }}\n        onSubmit={async (values) => {\n          await forgotPassword(values);\n          setComplete(true);\n        }}>\n        {({ isSubmitting }) =>\n          complete ? (\n            <Box>\n              if an account with that email exists, we sent you an email\n            </Box>\n          ) : (\n            <Form>\n              <InputField\n                name=\"email\"\n                placeholder=\"email\"\n                label=\"Email\"\n                type=\"email\"\n              />\n              <Button\n                type=\"submit\"\n                variantColor=\"teal\"\n                mt=\"4\"\n                isLoading={isSubmitting}>\n                forgot password\n              </Button>\n            </Form>\n          )\n        }\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}