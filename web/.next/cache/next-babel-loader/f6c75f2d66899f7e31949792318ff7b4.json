{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/facundo/code/reddit/web/src/pages/change-password/[token].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Button, Flex, Link } from '@chakra-ui/core';\nimport { Form, Formik } from 'formik';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { useState } from 'react';\nimport { InputField } from '../../components/InputField';\nimport { Wrapper } from '../../components/Wrapper';\nimport { useChangePasswordMutation } from '../../generated/graphql';\nimport { createUrqlClient } from '../../utils/createUrqlClient';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport { Layout } from '../../components/Layout';\n\nvar ChangePassword = function ChangePassword(_ref) {\n  _s();\n\n  var token = _ref.token;\n  var router = useRouter();\n\n  var _useChangePasswordMut = useChangePasswordMutation(),\n      _useChangePasswordMut2 = _slicedToArray(_useChangePasswordMut, 2),\n      changePassword = _useChangePasswordMut2[1];\n\n  var _useState = useState(''),\n      tokenError = _useState[0],\n      setTokenError = _useState[1];\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Wrapper, {\n    variant: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      newPassword: ''\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var _response$data, _response$data2;\n\n        var setErrors, response, errorMap;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors;\n                _context.next = 3;\n                return changePassword({\n                  newPassword: values.newPassword,\n                  token: typeof router.query.token === 'string' ? router.query.token : ''\n                });\n\n              case 3:\n                response = _context.sent;\n\n                if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.changePassword.errors) {\n                  errorMap = toErrorMap(response.data.changePassword.errors);\n\n                  if ('token' in errorMap) {\n                    setTokenError(errorMap.token);\n                  }\n\n                  setErrors(errorMap);\n                } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.changePassword.user) {\n                  router.push('/');\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, function (_ref4) {\n    var isSubmitting = _ref4.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, __jsx(InputField, {\n      name: \"newPassword\",\n      placeholder: \"new password\",\n      label: \"New Password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }), tokenError ? __jsx(Flex, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, __jsx(Box, {\n      mr: 2,\n      style: {\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, tokenError), __jsx(NextLink, {\n      href: \"/forgot-password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"click here to get a new one\"))) : null, __jsx(Button, {\n      type: \"submit\",\n      variantColor: \"teal\",\n      mt: \"4\",\n      isLoading: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"change password\"));\n  })));\n};\n\n_s(ChangePassword, \"72KrU46ZzG1+BH3OGhB0j6CEbZk=\", false, function () {\n  return [useRouter, useChangePasswordMutation];\n});\n\n_c = ChangePassword;\nexport default withUrqlClient(createUrqlClient)(ChangePassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/pages/change-password/[token].tsx"],"names":["Box","Button","Flex","Link","Form","Formik","withUrqlClient","NextLink","useRouter","React","useState","InputField","Wrapper","useChangePasswordMutation","createUrqlClient","toErrorMap","Layout","ChangePassword","token","router","changePassword","tokenError","setTokenError","newPassword","values","setErrors","query","response","data","errors","errorMap","user","push","isSubmitting","color"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Link } from '@chakra-ui/core';\nimport { Form, Formik } from 'formik';\nimport { NextPage } from 'next';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { useState } from 'react';\nimport { InputField } from '../../components/InputField';\nimport { Wrapper } from '../../components/Wrapper';\nimport { useChangePasswordMutation } from '../../generated/graphql';\nimport { createUrqlClient } from '../../utils/createUrqlClient';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport { Layout } from '../../components/Layout';\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  const router = useRouter();\n  const [, changePassword] = useChangePasswordMutation();\n  const [tokenError, setTokenError] = useState('');\n\n  return (\n    <Layout>\n      <Wrapper variant=\"small\">\n        <Formik\n          initialValues={{ newPassword: '' }}\n          onSubmit={async (values, { setErrors }) => {\n            const response = await changePassword({\n              newPassword: values.newPassword,\n              token:\n                typeof router.query.token === 'string'\n                  ? router.query.token\n                  : '',\n            });\n            if (response.data?.changePassword.errors) {\n              const errorMap = toErrorMap(response.data.changePassword.errors);\n              if ('token' in errorMap) {\n                setTokenError(errorMap.token);\n              }\n              setErrors(errorMap);\n            } else if (response.data?.changePassword.user) {\n              router.push('/');\n            }\n          }}>\n          {({ isSubmitting }) => (\n            <Form>\n              <InputField\n                name=\"newPassword\"\n                placeholder=\"new password\"\n                label=\"New Password\"\n                type=\"password\"\n              />\n              {tokenError ? (\n                <Flex>\n                  <Box mr={2} style={{ color: 'red' }}>\n                    {tokenError}\n                  </Box>\n                  <NextLink href=\"/forgot-password\">\n                    <Link>click here to get a new one</Link>\n                  </NextLink>\n                </Flex>\n              ) : null}\n              <Button\n                type=\"submit\"\n                variantColor=\"teal\"\n                mt=\"4\"\n                isLoading={isSubmitting}>\n                change password\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}