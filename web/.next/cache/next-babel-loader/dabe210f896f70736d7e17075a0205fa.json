{"ast":null,"code":"var _jsxFileName = \"/home/facundo/code/reddit/web/src/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core';\nimport theme from '../theme';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(CSSReset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/pages/_app.tsx"],"names":["ThemeProvider","CSSReset","theme","MyApp","Component","pageProps"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAA2D,iBAA3D;AAQA,OAAOC,KAAP,MAAkB,UAAlB;;AAQA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAA8C;AAC5C,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEH,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD,eAAeG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD;;AAED,eAAeF,KAAf","sourcesContent":["import { ThemeProvider, CSSReset, ColorModeProvider } from '@chakra-ui/core';\nimport { Provider, createClient, dedupExchange, fetchExchange } from 'urql';\nimport {\n  cacheExchange,\n  Cache,\n  QueryInput,\n  query,\n} from '@urql/exchange-graphcache';\nimport theme from '../theme';\nimport {\n  MeDocument,\n  MeQuery,\n  LoginMutation,\n  RegisterMutation,\n} from '../generated/graphql';\n\nfunction MyApp({ Component, pageProps }: any) {\n  return (\n    <ThemeProvider theme={theme}>\n      <CSSReset />\n      <Component {...pageProps} />\n    </ThemeProvider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}