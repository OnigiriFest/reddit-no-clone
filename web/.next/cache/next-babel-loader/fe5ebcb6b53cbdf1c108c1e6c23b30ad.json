{"ast":null,"code":"var _jsxFileName = \"/home/facundo/code/reddit/web/src/pages/post/[id].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../../utils/createUrqlClient';\nimport { useRouter } from 'next/router';\nimport { usePostQuery } from '../../generated/graphql';\nimport { Layout } from '../../components/Layout';\nimport { Heading } from '@chakra-ui/core';\n\nconst Post = ({}) => {\n  var _data$post2;\n\n  const router = useRouter();\n  const intId = typeof router.query.id === 'string' ? parseInt(router.query.id) : -1;\n  const [{\n    data,\n    error,\n    fetching\n  }] = usePostQuery({\n    pause: intId === -1,\n    variables: {\n      id: intId\n    }\n  });\n\n  if (fetching) {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n\n  if (error) {\n    var _data$post;\n\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, __jsx(Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, data === null || data === void 0 ? void 0 : (_data$post = data.post) === null || _data$post === void 0 ? void 0 : _data$post.title), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"error.message\"));\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$post2 = data.post) === null || _data$post2 === void 0 ? void 0 : _data$post2.text);\n};\n\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Post);","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/pages/post/[id].tsx"],"names":["React","withUrqlClient","createUrqlClient","useRouter","usePostQuery","Layout","Heading","Post","router","intId","query","id","parseInt","data","error","fetching","pause","variables","post","title","text","ssr"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,IAAkB,GAAG,CAAC,EAAD,KAAQ;AAAA;;AACjC,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,KAAK,GACT,OAAOD,MAAM,CAACE,KAAP,CAAaC,EAApB,KAA2B,QAA3B,GAAsCC,QAAQ,CAACJ,MAAM,CAACE,KAAP,CAAaC,EAAd,CAA9C,GAAkE,CAAC,CADrE;AAGA,QAAM,CAAC;AAAEE,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAD,IAA8BX,YAAY,CAAC;AAC/CY,IAAAA,KAAK,EAAEP,KAAK,KAAK,CAAC,CAD6B;AAE/CQ,IAAAA,SAAS,EAAE;AACTN,MAAAA,EAAE,EAAEF;AADK;AAFoC,GAAD,CAAhD;;AAOA,MAAIM,QAAJ,EAAc;AACZ,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;;AAED,MAAID,KAAJ,EAAW;AAAA;;AACT,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUD,IAAV,aAAUA,IAAV,qCAAUA,IAAI,CAAEK,IAAhB,+CAAU,WAAYC,KAAtB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF;AAMD;;AAED,SAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASN,IAAT,aAASA,IAAT,sCAASA,IAAI,CAAEK,IAAf,gDAAS,YAAYE,IAArB,CAAP;AACD,CA9BD;;AAgCA,eAAenB,cAAc,CAACC,gBAAD,EAAmB;AAAEmB,EAAAA,GAAG,EAAE;AAAP,CAAnB,CAAd,CAAgDd,IAAhD,CAAf","sourcesContent":["import React from 'react';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../../utils/createUrqlClient';\nimport { useRouter } from 'next/router';\nimport { usePostQuery } from '../../generated/graphql';\nimport { Layout } from '../../components/Layout';\nimport { Heading } from '@chakra-ui/core';\n\nconst Post: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  const intId =\n    typeof router.query.id === 'string' ? parseInt(router.query.id) : -1;\n\n  const [{ data, error, fetching }] = usePostQuery({\n    pause: intId === -1,\n    variables: {\n      id: intId,\n    },\n  });\n\n  if (fetching) {\n    return (\n      <Layout>\n        <div>Loading...</div>\n      </Layout>\n    );\n  }\n\n  if (error) {\n    return (\n      <Layout>\n        <Heading>{data?.post?.title}</Heading>\n        <div>error.message</div>\n      </Layout>\n    );\n  }\n\n  return <Layout>{data?.post?.text}</Layout>;\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Post);\n"]},"metadata":{},"sourceType":"module"}