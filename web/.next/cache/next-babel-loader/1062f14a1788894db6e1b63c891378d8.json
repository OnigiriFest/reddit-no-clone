{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/facundo/code/reddit/web/src/pages/login.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Box, Button } from '@chakra-ui/core';\nimport { Wrapper } from '../components/Wrapper';\nimport { InputField } from '../components/InputField';\nimport { useLoginQuery } from '../generated/graphql';\nimport { useRouter } from 'next/router';\n\nvar Login = function Login(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  var login = useLoginQuery();\n  console.log(login);\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var setErrors;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors;\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, function (_ref4) {\n    var isSubmitting = _ref4.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, __jsx(InputField, {\n      name: \"username\",\n      placeholder: \"username\",\n      label: \"Username\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, __jsx(InputField, {\n      name: \"password\",\n      placeholder: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    })), __jsx(Button, {\n      type: \"submit\",\n      variantColor: \"teal\",\n      mt: \"4\",\n      isLoading: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"Register\"));\n  }));\n};\n\n_s(Login, \"pLxbBdFdI4wtQgt+IZCDayuEZGo=\", false, function () {\n  return [useRouter, useLoginQuery];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/facundo/code/reddit/web/src/pages/login.tsx"],"names":["React","Formik","Form","Box","Button","Wrapper","InputField","useLoginQuery","useRouter","Login","router","login","console","log","username","password","values","setErrors","isSubmitting"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,KAAmB,GAAG,SAAtBA,KAAsB,OAAQ;AAAA;;AAAA;;AAClC,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,MAAMG,KAAK,GAAGJ,aAAa,EAA3B;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEG,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADjB;AAEE,IAAA,QAAQ;AAAA,2EAAE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,gBAAAA,SAAjB,SAAiBA,SAAjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYG;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,WACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,WAAW,EAAC,UAFd;AAGE,MAAA,KAAK,EAAC,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,WAAW,EAAC,UAFd;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,EAcE,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,YAAY,EAAC,MAFf;AAGE,MAAA,EAAE,EAAC,GAHL;AAIE,MAAA,SAAS,EAAEA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,CADD;AAAA,GAZH,CADF,CADF;AAyCD,CA/CD;;GAAMT,K;UACWD,S,EACDD,a;;;KAFVE,K;AAiDN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Box, Button } from '@chakra-ui/core';\nimport { Wrapper } from '../components/Wrapper';\nimport { InputField } from '../components/InputField';\nimport { useLoginQuery } from '../generated/graphql';\nimport { toErrorMap } from '../utils/toErrorMap';\nimport { useRouter } from 'next/router';\n\nconst Login: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  const login = useLoginQuery();\n\n  console.log(login);\n\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ username: '', password: '' }}\n        onSubmit={async (values, { setErrors }) => {\n          // const response = await login({ options: values });\n          // if (response.data?.login.errors) {\n          //   setErrors(toErrorMap(response.data.login.errors));\n          // } else if (response.data?.register.user) {\n          //   console.log('halo');\n          //   router.push('/');\n          // }\n          // console.log(response.data);\n        }}>\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"username\"\n              placeholder=\"username\"\n              label=\"Username\"\n            />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                placeholder=\"password\"\n                label=\"Password\"\n                type=\"password\"\n              />\n            </Box>\n            <Button\n              type=\"submit\"\n              variantColor=\"teal\"\n              mt=\"4\"\n              isLoading={isSubmitting}>\n              Register\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}